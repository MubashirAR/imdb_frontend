[{"/home/mubashirar/Documents/projects/imdb_fynd_frontend/src/reportWebVitals.js":"1","/home/mubashirar/Documents/projects/imdb_fynd_frontend/src/App.js":"2","/home/mubashirar/Documents/projects/imdb_fynd_frontend/src/pages/PrivateRoute.js":"3","/home/mubashirar/Documents/projects/imdb_fynd_frontend/src/context/auth.js":"4","/home/mubashirar/Documents/projects/imdb_fynd_frontend/src/pages/Admin.js":"5","/home/mubashirar/Documents/projects/imdb_fynd_frontend/src/pages/Login.js":"6","/home/mubashirar/Documents/projects/imdb_fynd_frontend/src/pages/Signup.js":"7","/home/mubashirar/Documents/projects/imdb_fynd_frontend/src/pages/Home.js":"8","/home/mubashirar/Documents/projects/imdb_fynd_frontend/src/pages/NewMovie.js":"9","/home/mubashirar/Documents/projects/imdb_fynd_frontend/src/index.js":"10"},{"size":362,"mtime":1606456605313,"results":"11","hashOfConfig":"12"},{"size":3079,"mtime":1606540920923,"results":"13","hashOfConfig":"12"},{"size":462,"mtime":1606489757736,"results":"14","hashOfConfig":"12"},{"size":160,"mtime":1606466017594,"results":"15","hashOfConfig":"12"},{"size":3725,"mtime":1606490597279,"results":"16","hashOfConfig":"12"},{"size":2456,"mtime":1606530095810,"results":"17","hashOfConfig":"12"},{"size":4851,"mtime":1606531852336,"results":"18","hashOfConfig":"12"},{"size":2833,"mtime":1606488007475,"results":"19","hashOfConfig":"12"},{"size":5272,"mtime":1606490602895,"results":"20","hashOfConfig":"12"},{"size":500,"mtime":1606456605313,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"141t07y",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/home/mubashirar/Documents/projects/imdb_fynd_frontend/src/reportWebVitals.js",[],["48","49"],"/home/mubashirar/Documents/projects/imdb_fynd_frontend/src/App.js",["50","51","52"],"/home/mubashirar/Documents/projects/imdb_fynd_frontend/src/pages/PrivateRoute.js",[],"/home/mubashirar/Documents/projects/imdb_fynd_frontend/src/context/auth.js",[],"/home/mubashirar/Documents/projects/imdb_fynd_frontend/src/pages/Admin.js",["53","54","55","56","57","58"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"../context/auth\";\n\nfunction Admin(props) {\n  const [movies, setMovies] = useState([])\n  const [editMode, setEditMode] = useState({})\n  const [editData, setEditData] = useState({})\n  const [page, setPage] = useState(1)\n  const { authTokens } = useAuth()\n  useEffect(() => {\n    getAllMovies();\n  }, [0]);\n\n  const getAllMovies = async () => {\n    let {data: movies} = await axios.get('/movies/all')\n    console.log({movies})\n    setMovies(movies)\n    let editData = {}\n    movies.map(movie => {\n      editData[movie.id] = movie;\n    })\n    setEditData(editData)\n  }\n  const toggleEditMode = movie => {\n    setEditMode({\n      ...editMode,\n      [movie.id]: !editMode[movie.id]\n    })\n  };\n  const updateMovie = async movie => {\n    const { token_type, access_token } = authTokens || {};\n    const resp = await axios.put('/movie/', movie, {\n      headers: {\n        'Authorization': ` ${token_type} ${access_token}`\n      }\n    });\n    console.log({resp})\n  }\n  \n  const changePage = jumpSize => {\n    if(jumpSize < 0 && page == 1) return;\n    if(jumpSize > 0 && movies.length < 10) return;\n    setPage(page + jumpSize)\n  }\n  return (\n    <div className=\"row\">\n      {movies.map(movie => (\n          <div key={movie.id} className=\"col-sm-6\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                {\n                  editMode[movie.id] \n                    ? (\n                      <>\n                        <input className=\"card-title\" value={editData[movie.id].name}/>\n                        <input className=\"card-title\" value={editData[movie.id].director}/>\n                        <input className=\"card-title\" value={editData[movie.id].imdb_score}/>\n                        <input className=\"card-title\" value={editData[movie.id].popularity}/>\n                        {movie.genres.map(genre => {\n                          return <a className=\"badge badge-dark\">{genre.name}</a>\n                        })}\n                        <div>\n                          <button className=\"btn btn-danger pull-right\" onClick={_ => toggleEditMode(movie)}>Cancel</button>\n                          <button className=\"btn btn-primary pull-right\" onClick={_ => updateMovie(movie)}>Save</button>\n                        </div>\n                      </>\n                    )\n                    : (\n                      <>\n                        <h5 className=\"card-title\">{movie.name}</h5>\n                        <p className=\"card-text\">{movie.director}</p>\n                        {movie.genres.map(genre => {\n                          console.log({genre})\n                          return <a className=\"badge badge-dark\">{genre.name}</a>\n                        })}\n                        <a href=\"#\" className=\"badge badge-primary\">IMDB Score: {movie.imdb_score}</a>\n                        <div>\n                          <button className=\"btn btn-primary pull-right\" onClick={_ => toggleEditMode(movie)}>Edit</button>\n                        </div>\n                      </>\n                    )\n                }\n                \n              </div>\n            </div>\n          </div>\n      ))}\n      \n      <div className=\"d-flex justify-content-center full-width w-100 p-3\">\n        {\n          page > 1\n          ?  <button className=\"btn btn-secondary mr-3\" onClick={_ => changePage(-1)}>Prev</button>\n          : null\n        }\n        page {page}\n        {\n          movies.length === 10\n          ? <button className=\"btn btn-secondary ml-3\" onClick={_ => changePage(1)}>Next</button>\n          : null\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Admin;","/home/mubashirar/Documents/projects/imdb_fynd_frontend/src/pages/Login.js",["59","60","61"],"import React, { useEffect, useState } from \"react\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useAuth } from \"../context/auth\";\n\nfunction Login() {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  let history = useHistory()\n  const { setAuthTokens, setIsAdmin, authTokens } = useAuth();\n\n  useEffect(async () => {\n    const { token_type, access_token } = authTokens || {};\n    let user = await axios.get('/users/me',{\n      headers: {\n          'Authorization': ` ${token_type} ${access_token}`\n      }\n    });\n    if(user.data.role === 'admin') {\n      setIsAdmin(true)\n    } else {\n      setIsAdmin(false)\n    }\n    history.push('/admin')\n  }, [isLoggedIn])\n  var bodyFormData = new FormData();\n  async function postLogin() {\n    bodyFormData.append('username', userName);\n    bodyFormData.append('password', password);\n    try {\n      let result = await axios.post(\"/token\", bodyFormData, {\n          headers: {\n              'Content-Type': 'application/x-www-form-urlencoded'\n          }\n      })\n      console.log({result})\n      if (result.status === 200) {\n        setAuthTokens(result.data);\n        setLoggedIn(true);\n      } else {\n        setIsError(true);\n      }\n      \n      // history.push('/')\n    } catch (error) {\n      setIsError(true);\n    }\n  }\n  return (\n    <div className=\"card\">\n      {/* <img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\"> */}\n      <div className=\"card-body\">\n            <div className=\"form-group\">\n                <input\n                    type=\"username\"\n                    value={userName}\n                    onChange={e => {\n                        setUserName(e.target.value);\n                    }}\n                    placeholder=\"email\"\n                />\n\n            </div>\n            <input\n            type=\"password\"\n            value={password}\n            onChange={e => {\n                setPassword(e.target.value);\n            }}\n            placeholder=\"password\"\n            />\n            <button onClick={postLogin}>Sign In</button>\n            <div>\n            <Link to=\"/signup\">Don't have an account?</Link>\n                { isError && 'The username or password provided were incorrect!' }\n\n            </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default Login;","/home/mubashirar/Documents/projects/imdb_fynd_frontend/src/pages/Signup.js",["62","63"],"import React, { useState } from \"react\";\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\nconst initialState = {\n  username: '',\n  email: '',\n  role: '',\n  password: '',\n  confirmPassword: ''\n}\nfunction Signup() {\n  const [user, setUser] = useState(initialState)\n  const history = useHistory()\n  const changeHandler = (key, index) => e => {\n    const { value } = e.target || { value: e };\n    console.log({[key]: value})\n    setUser({\n      ...user,\n      [key]: value\n    })\n  }\n  // The api should also have validation because the form can be modified from inspect element\n  const isEmailValid = email => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n  const isPasswordValid = password => {\n    let regx = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/\n    return regx.test(password)\n  }\n  const isFormValid = () => {\n    const { username, email, role, password, confirmPassword } = user;\n    console.log({ password, confirmPassword})\n    return !!username && !!email && !!role && (password === confirmPassword)\n  }\n  const saveUser = async () => {\n    if(!isEmailValid(user.email)) {\n      alert('Please enter a valid email')\n      return;\n    }\n    if(!isPasswordValid(user.password)) {\n      alert('Password must be minimum eight characters with at least one letter and one number')\n      return;\n    }\n    if(!isFormValid()) {\n      alert('Please fill in all details. Also ensure password matches with confirm password')\n      return;\n    }\n    user.genre = user.genres;\n    try {\n      const resp = await axios.post('/users/', user);\n      if(resp.status === 201) {\n        alert('Saved successfully')\n        history.push('/')\n      } else {\n        alert('There was an error')\n      }\n    } catch (error) {\n      alert('There was an error.')\n    }\n  }\n  return (\n    <div className=\"d-flex justify-content-center align-items-center w-100 p-5\">\n      <div className=\"card\">\n        <div className=\"card-body\">\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <label className=\"input-group-text\">Username</label>\n          </div>\n          <input className=\"form-control\" onChange={changeHandler('username')} value={user.username}/>\n        </div>\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <label className=\"input-group-text\">Email</label>\n          </div>\n          <div>\n            <input type=\"email\" className=\"form-control\" onChange={changeHandler('email')} value={user.email}/>\n          </div>\n          {\n            user.email && !isEmailValid(user.email)\n            ? <div>Please enter a valid email ID</div>\n            : ''\n          }\n        </div>\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <label className=\"input-group-text\">Password</label>\n          </div>\n          <input type=\"password\" className=\"form-control\" onChange={changeHandler('password')} value={user.password}/>\n          \n        </div>\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <label className=\"input-group-text\">Confirm Password</label>\n          </div>\n          <input type=\"password\" className=\"form-control\" onChange={changeHandler('confirmPassword')} value={user.confirmPassword}/>\n          {\n            user.password !== user.confirmPassword\n            ? <p>Passwords do not match!</p>\n            : ''\n          }\n        </div>\n        <div className=\"input-group\" onClick={_ => changeHandler('role')('admin')}>\n          <div className=\"input-group-prepend\">\n            <div className=\"input-group-text\">\n              <input type=\"radio\" checked={user.role === 'admin'}/>\n            </div>\n          </div>\n          <input disabled type=\"text\" className=\"form-control\" value=\"Admin\"/>\n        </div>\n        <div className=\"input-group\" onClick={_ => changeHandler('role')('user')}>\n          <div className=\"input-group-prepend\">\n            <div className=\"input-group-text\">\n              <input type=\"radio\" checked={user.role === 'user'}/>\n            </div>\n          </div>\n          <input disabled type=\"text\" className=\"form-control\" value=\"User\"/>\n        </div>\n      </div>\n\n      {\n        user.password && !isPasswordValid(user.password)\n        ? <p>Password must be minimum eight characters with at least one letter and one number</p>\n        : ''\n      }\n      <button disabled={!isFormValid() || !isPasswordValid(user.password) || !isEmailValid(user.email)} className=\"btn btn-primary pull-right\" onClick={_ => saveUser()}>Save</button>\n    </div>\n  </div>\n  );\n}\n\nexport default Signup;","/home/mubashirar/Documents/projects/imdb_fynd_frontend/src/pages/Home.js",["64","65","66","67","68"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n\nfunction Home(props) {\n  const [movies, setMovies] = useState([])\n  const [page, setPage] = useState(1)\n  const [searchVal, setSearchVal] = useState('')\n\n  useEffect(() => {\n    getAllMovies();\n  }, [page])\n  useEffect(() => {\n    if(searchVal.length >=3 || searchVal.length === 0)\n    searchMovies();\n  }, [searchVal])\n\n  const getAllMovies = async () => {\n    let {data: movies} = await axios.get(`/movies/all?page=${page}`)\n    setMovies(movies)\n  }\n  const searchMovies = async () => {\n    let {data: movies} = await axios.get(`/movies/search?page=${page}&query=${searchVal}`)\n    setMovies(movies)\n  }\n\n  const changePage = jumpSize => {\n    if(jumpSize < 0 && page == 1) return;\n    if(jumpSize > 0 && movies.length < 10) return;\n    setPage(page + jumpSize)\n  }\n  const searchChange = e => {\n    const { value } = e.target;\n    setSearchVal(value)\n  }\n  // const searchClear = e => {\n  //   setSearchVal('')\n  // }\n  return (\n    <div className=\"row\">\n      <div className=\"p-5 w-100\">\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\" id=\"basic-addon2\">Search</span>\n          </div>\n          <input type=\"text\" className=\"form-control\" placeholder=\"Movie/Director Name\" onChange={searchChange}/>\n          {/* <div className=\"input-group-append\" onChange={searchClear}>\n            <span className=\"btn btn-outline-secondary\" id=\"basic-addon2\">Clear</span>\n          </div>\n          <div className=\"input-group-append\" onClick={searchMovies}>\n            <span className=\"btn btn-outline-secondary\" id=\"basic-addon2\">Search</span>\n          </div> */}\n        </div>\n      </div>\n      {movies.map(movie => (\n          <div key={movie.id} className=\"col-sm-6\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{movie.name}</h5>\n                <p className=\"card-text\">{movie.director}</p>\n                {movie.genres.map(genre => {\n                  return <a className=\"badge badge-dark\">{genre.name}</a>\n                })}\n                <br/>\n                <a href=\"#\" className=\"badge badge-primary\">IMDB Score: {movie.imdb_score}</a>\n              </div>\n            </div>\n          </div>\n      ))}\n      <div className=\"d-flex justify-content-center full-width w-100 p-3\">\n        {\n          page > 1\n          ?  <button className=\"btn btn-secondary mr-3\" onClick={_ => changePage(-1)}>Prev</button>\n          : null\n        }\n        page {page}\n        {\n          movies.length === 10\n          ? <button className=\"btn btn-secondary ml-3\" onClick={_ => changePage(1)}>Next</button>\n          : null\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Home;",["69","70"],"/home/mubashirar/Documents/projects/imdb_fynd_frontend/src/pages/NewMovie.js",["71"],"/home/mubashirar/Documents/projects/imdb_fynd_frontend/src/index.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":13},{"ruleId":"76","severity":1,"message":"80","line":12,"column":10,"nodeType":"78","messageId":"79","endLine":12,"endColumn":19},{"ruleId":"76","severity":1,"message":"81","line":18,"column":7,"nodeType":"78","messageId":"79","endLine":18,"endColumn":14},{"ruleId":"82","severity":1,"message":"83","line":13,"column":7,"nodeType":"84","endLine":13,"endColumn":8},{"ruleId":"85","severity":1,"message":"86","line":20,"column":22,"nodeType":"87","messageId":"88","endLine":20,"endColumn":24},{"ruleId":"89","severity":1,"message":"90","line":42,"column":29,"nodeType":"91","messageId":"92","endLine":42,"endColumn":31},{"ruleId":"93","severity":1,"message":"94","line":61,"column":34,"nodeType":"95","endLine":61,"endColumn":66},{"ruleId":"93","severity":1,"message":"94","line":75,"column":34,"nodeType":"95","endLine":75,"endColumn":66},{"ruleId":"93","severity":1,"message":"96","line":77,"column":25,"nodeType":"95","endLine":77,"endColumn":69},{"ruleId":"76","severity":1,"message":"97","line":2,"column":16,"nodeType":"78","messageId":"79","endLine":2,"endColumn":24},{"ruleId":"82","severity":1,"message":"98","line":14,"column":13,"nodeType":"87","endLine":27,"endColumn":4},{"ruleId":"82","severity":1,"message":"99","line":27,"column":6,"nodeType":"100","endLine":27,"endColumn":18,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":24,"column":26,"nodeType":"84","messageId":"104","endLine":24,"endColumn":27,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"103","line":24,"column":51,"nodeType":"84","messageId":"104","endLine":24,"endColumn":52,"suggestions":"106"},{"ruleId":"82","severity":1,"message":"107","line":12,"column":6,"nodeType":"100","endLine":12,"endColumn":12,"suggestions":"108"},{"ruleId":"82","severity":1,"message":"109","line":16,"column":6,"nodeType":"100","endLine":16,"endColumn":17,"suggestions":"110"},{"ruleId":"89","severity":1,"message":"90","line":28,"column":29,"nodeType":"91","messageId":"92","endLine":28,"endColumn":31},{"ruleId":"93","severity":1,"message":"94","line":62,"column":26,"nodeType":"95","endLine":62,"endColumn":58},{"ruleId":"93","severity":1,"message":"96","line":65,"column":17,"nodeType":"95","endLine":65,"endColumn":61},{"ruleId":"72","replacedBy":"111"},{"ruleId":"74","replacedBy":"112"},{"ruleId":"76","severity":1,"message":"80","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","The 0 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Redirect' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has missing dependencies: 'authTokens', 'history', and 'setIsAdmin'. Either include them or remove the dependency array.","ArrayExpression",["115"],"no-useless-escape","Unnecessary escape character: \\[.","unnecessaryEscape",["116","117"],["118","119"],"React Hook useEffect has a missing dependency: 'getAllMovies'. Either include it or remove the dependency array.",["120"],"React Hook useEffect has a missing dependency: 'searchMovies'. Either include it or remove the dependency array.",["121"],["113"],["114"],"no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"messageId":"124","fix":"125","desc":"126"},{"messageId":"127","fix":"128","desc":"129"},{"messageId":"124","fix":"130","desc":"126"},{"messageId":"127","fix":"131","desc":"129"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [authTokens, history, isLoggedIn, setIsAdmin]",{"range":"136","text":"137"},"removeEscape",{"range":"138","text":"139"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"140","text":"141"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"142","text":"139"},{"range":"143","text":"141"},"Update the dependencies array to be: [getAllMovies, page]",{"range":"144","text":"145"},"Update the dependencies array to be: [searchMovies, searchVal]",{"range":"146","text":"147"},[854,866],"[authTokens, history, isLoggedIn, setIsAdmin]",[658,659],"",[658,658],"\\",[683,684],[683,683],[280,286],"[getAllMovies, page]",[388,399],"[searchMovies, searchVal]"]